<!-- HTML generated using hilite.me --><div style="background: #ffffff; overflow:auto;width:auto;border:solid gray;border-width:.1em .1em .1em .8em;padding:.2em .6em;"><pre style="margin: 0; line-height: 125%"><span style="color: #557799">#include &lt;stdio.h&gt;</span>
<span style="color: #888888">// To scan an array</span>
<span style="color: #333399; font-weight: bold">void</span> <span style="color: #0066BB; font-weight: bold">Scan</span>(<span style="color: #333399; font-weight: bold">int</span> <span style="color: #333333">*</span>a, <span style="color: #333399; font-weight: bold">int</span> n)
{
    <span style="color: #008800; font-weight: bold">for</span> (<span style="color: #333399; font-weight: bold">int</span> i <span style="color: #333333">=</span> <span style="color: #0000DD; font-weight: bold">0</span>; i <span style="color: #333333">&lt;</span> n; i<span style="color: #333333">++</span>)
        scanf(<span style="background-color: #fff0f0">&quot;%d&quot;</span>, (a <span style="color: #333333">+</span> i));
}
<span style="color: #888888">// To print Array</span>
<span style="color: #333399; font-weight: bold">void</span> <span style="color: #0066BB; font-weight: bold">Print</span>(<span style="color: #333399; font-weight: bold">int</span> <span style="color: #333333">*</span>a, <span style="color: #333399; font-weight: bold">int</span> n)
{
    <span style="color: #008800; font-weight: bold">for</span> (<span style="color: #333399; font-weight: bold">int</span> i <span style="color: #333333">=</span> <span style="color: #0000DD; font-weight: bold">0</span>; i <span style="color: #333333">&lt;</span> n; i<span style="color: #333333">++</span>)
        printf(<span style="background-color: #fff0f0">&quot;%d &quot;</span>, <span style="color: #333333">*</span>(a <span style="color: #333333">+</span> i));
    printf(<span style="background-color: #fff0f0">&quot;</span><span style="color: #666666; font-weight: bold; background-color: #fff0f0">\n</span><span style="background-color: #fff0f0">&quot;</span>);
}
<span style="color: #888888">// Exchange a and b</span>
<span style="color: #333399; font-weight: bold">void</span> <span style="color: #0066BB; font-weight: bold">exchange</span>(<span style="color: #333399; font-weight: bold">int</span> <span style="color: #333333">*</span>a, <span style="color: #333399; font-weight: bold">int</span> <span style="color: #333333">*</span>b)
{
    <span style="color: #333399; font-weight: bold">int</span> t <span style="color: #333333">=</span> <span style="color: #333333">*</span>a;
    <span style="color: #333333">*</span>a <span style="color: #333333">=</span> <span style="color: #333333">*</span>b;
    <span style="color: #333333">*</span>b <span style="color: #333333">=</span> t;
}
<span style="color: #888888">// Problem solution</span>
<span style="color: #333399; font-weight: bold">void</span> <span style="color: #0066BB; font-weight: bold">Solve</span>(<span style="color: #333399; font-weight: bold">int</span> <span style="color: #333333">*</span>a, <span style="color: #333399; font-weight: bold">int</span> <span style="color: #333333">*</span>b, <span style="color: #333399; font-weight: bold">int</span> n)
{
    <span style="color: #008800; font-weight: bold">for</span> (<span style="color: #333399; font-weight: bold">int</span> i <span style="color: #333333">=</span> <span style="color: #0000DD; font-weight: bold">0</span>; i <span style="color: #333333">&lt;</span> n; i<span style="color: #333333">++</span>)
        exchange(a <span style="color: #333333">+</span> i, b <span style="color: #333333">+</span> n <span style="color: #333333">-</span> <span style="color: #0000DD; font-weight: bold">1</span> <span style="color: #333333">-</span> i);
}
<span style="color: #888888">// Driver Code</span>
<span style="color: #333399; font-weight: bold">int</span> <span style="color: #0066BB; font-weight: bold">main</span>()
{
    <span style="color: #333399; font-weight: bold">int</span> n;
    scanf(<span style="background-color: #fff0f0">&quot;%d&quot;</span>, <span style="color: #333333">&amp;</span>n);

    <span style="color: #333399; font-weight: bold">int</span> A[n], B[n];

    Scan(A, n);
    Scan(B, n);

    Solve(A, B, n);

    Print(A, n);
    Print(B, n);

    <span style="color: #008800; font-weight: bold">return</span> <span style="color: #0000DD; font-weight: bold">0</span>;
}
<span style="color: #333333">------------------------------</span>
<span style="color: #557799">#include &lt;stdio.h&gt;</span>

<span style="color: #333399; font-weight: bold">int</span> find_intersection_point(<span style="color: #333399; font-weight: bold">double</span> <span style="color: #333333">*</span>x, <span style="color: #333399; font-weight: bold">double</span> <span style="color: #333333">*</span>y, <span style="color: #333399; font-weight: bold">int</span> m1, <span style="color: #333399; font-weight: bold">int</span> c1, <span style="color: #333399; font-weight: bold">int</span> m2, <span style="color: #333399; font-weight: bold">int</span> c2)
{
    <span style="color: #888888">// if there is no intersection point</span>
    <span style="color: #008800; font-weight: bold">if</span> (m1 <span style="color: #333333">==</span> m2)
        <span style="color: #008800; font-weight: bold">return</span> <span style="color: #333333">-</span><span style="color: #0000DD; font-weight: bold">1</span>;
    <span style="color: #888888">// Intersection Exist</span>
    <span style="color: #888888">// Simple Maths</span>
    <span style="color: #333333">*</span>x <span style="color: #333333">=</span> (<span style="color: #333399; font-weight: bold">double</span>)(c2 <span style="color: #333333">-</span> c1) <span style="color: #333333">/</span> (m1 <span style="color: #333333">-</span> m2);
    <span style="color: #333333">*</span>y <span style="color: #333333">=</span> (<span style="color: #333399; font-weight: bold">double</span>)(m1 <span style="color: #333333">*</span> c2 <span style="color: #333333">-</span> m2 <span style="color: #333333">*</span> c1) <span style="color: #333333">/</span> (m1 <span style="color: #333333">-</span> m2);
    <span style="color: #008800; font-weight: bold">return</span> <span style="color: #0000DD; font-weight: bold">0</span>;
}

<span style="color: #888888">// Driver Code</span>
<span style="color: #333399; font-weight: bold">int</span> main()
{

    <span style="color: #333399; font-weight: bold">double</span> x, y;
    <span style="color: #333399; font-weight: bold">int</span> m1, m2, c1, c2;
    scanf(<span style="background-color: #fff0f0">&quot;%d %d %d %d&quot;</span>, <span style="color: #333333">&amp;</span>m1, <span style="color: #333333">&amp;</span>c1, <span style="color: #333333">&amp;</span>m2, <span style="color: #333333">&amp;</span>c2);

    <span style="color: #333399; font-weight: bold">int</span> flag <span style="color: #333333">=</span> find_intersection_point(<span style="color: #333333">&amp;</span>x, <span style="color: #333333">&amp;</span>y, m1, c1, m2, c2);
    <span style="color: #888888">// flag if Intersection exist 0 otherwise -1</span>
    <span style="color: #008800; font-weight: bold">if</span> (flag <span style="color: #333333">==</span> <span style="color: #333333">-</span><span style="color: #0000DD; font-weight: bold">1</span>)
        printf(<span style="background-color: #fff0f0">&quot;-1&quot;</span>);
    <span style="color: #008800; font-weight: bold">else</span>
        <span style="color: #0066BB; font-weight: bold">printf</span>(<span style="background-color: #fff0f0">&quot;%.2lf %.2lf&quot;</span>, x, y);

    <span style="color: #008800; font-weight: bold">return</span> <span style="color: #0000DD; font-weight: bold">0</span>;
}
<span style="color: #333333">---------------</span>
<span style="color: #557799">#include &lt;stdio.h&gt;</span>
<span style="color: #557799">#include &lt;stdlib.h&gt;</span>

<span style="color: #888888">// To scan an array</span>
<span style="color: #333399; font-weight: bold">void</span> Scan(<span style="color: #333399; font-weight: bold">int</span> <span style="color: #333333">*</span>a, <span style="color: #333399; font-weight: bold">int</span> n)
{
    <span style="color: #008800; font-weight: bold">for</span> (<span style="color: #333399; font-weight: bold">int</span> i <span style="color: #333333">=</span> <span style="color: #0000DD; font-weight: bold">0</span>; i <span style="color: #333333">&lt;</span> n; i<span style="color: #333333">++</span>)
        scanf(<span style="background-color: #fff0f0">&quot;%d &quot;</span>, (a <span style="color: #333333">+</span> i));
    <span style="color: #008800; font-weight: bold">return</span>;
}
<span style="color: #888888">// To print Array</span>
<span style="color: #333399; font-weight: bold">void</span> Print(<span style="color: #333399; font-weight: bold">int</span> <span style="color: #333333">*</span>a, <span style="color: #333399; font-weight: bold">int</span> n)
{
    <span style="color: #008800; font-weight: bold">for</span> (<span style="color: #333399; font-weight: bold">int</span> i <span style="color: #333333">=</span> <span style="color: #0000DD; font-weight: bold">0</span>; i <span style="color: #333333">&lt;</span> n; i<span style="color: #333333">++</span>)
        printf(<span style="background-color: #fff0f0">&quot;%d &quot;</span>, <span style="color: #333333">*</span>(a <span style="color: #333333">+</span> i));
    printf(<span style="background-color: #fff0f0">&quot;</span><span style="color: #666666; font-weight: bold; background-color: #fff0f0">\n</span><span style="background-color: #fff0f0">&quot;</span>);
    <span style="color: #008800; font-weight: bold">return</span>;
}
<span style="color: #888888">// to swap two number</span>
<span style="color: #333399; font-weight: bold">void</span> swap(<span style="color: #333399; font-weight: bold">int</span> <span style="color: #333333">*</span>a, <span style="color: #333399; font-weight: bold">int</span> <span style="color: #333333">*</span>b)
{
    <span style="color: #333399; font-weight: bold">int</span> t <span style="color: #333333">=</span> <span style="color: #333333">*</span>a;
    <span style="color: #333333">*</span>a <span style="color: #333333">=</span> <span style="color: #333333">*</span>b;
    <span style="color: #333333">*</span>b <span style="color: #333333">=</span> t;
}
<span style="color: #888888">// sort an array</span>
<span style="color: #333399; font-weight: bold">void</span> sort(<span style="color: #333399; font-weight: bold">int</span> <span style="color: #333333">*</span>a, <span style="color: #333399; font-weight: bold">int</span> n)
{
    <span style="color: #333399; font-weight: bold">int</span> k;
    <span style="color: #008800; font-weight: bold">for</span> (<span style="color: #333399; font-weight: bold">int</span> i <span style="color: #333333">=</span> <span style="color: #0000DD; font-weight: bold">0</span>; i <span style="color: #333333">&lt;</span> n; i<span style="color: #333333">++</span>)
    {
        k <span style="color: #333333">=</span> i;
        <span style="color: #008800; font-weight: bold">for</span> (<span style="color: #333399; font-weight: bold">int</span> j <span style="color: #333333">=</span> i <span style="color: #333333">+</span> <span style="color: #0000DD; font-weight: bold">1</span>; j <span style="color: #333333">&lt;</span> n; j<span style="color: #333333">++</span>)
            <span style="color: #008800; font-weight: bold">if</span> (<span style="color: #333333">*</span>(a <span style="color: #333333">+</span> j) <span style="color: #333333">&lt;</span> <span style="color: #333333">*</span>(a <span style="color: #333333">+</span> k))
                k <span style="color: #333333">=</span> j;
        swap(a <span style="color: #333333">+</span> k, a <span style="color: #333333">+</span> i);
    }
}
<span style="color: #888888">// merge the arrays</span>
<span style="color: #333399; font-weight: bold">int</span> <span style="color: #333333">*</span>merge(<span style="color: #333399; font-weight: bold">int</span> <span style="color: #333333">*</span>a, <span style="color: #333399; font-weight: bold">int</span> <span style="color: #333333">*</span>b, <span style="color: #333399; font-weight: bold">int</span> m, <span style="color: #333399; font-weight: bold">int</span> n, <span style="color: #333399; font-weight: bold">int</span> <span style="color: #333333">*</span>merged_len)
{
    <span style="color: #888888">// max of the element</span>
    <span style="color: #333399; font-weight: bold">int</span> max;
    <span style="color: #008800; font-weight: bold">if</span> (<span style="color: #333333">*</span>(a <span style="color: #333333">+</span> m <span style="color: #333333">-</span> <span style="color: #0000DD; font-weight: bold">1</span>) <span style="color: #333333">&gt;</span> <span style="color: #333333">*</span>(a <span style="color: #333333">+</span> m <span style="color: #333333">+</span> n <span style="color: #333333">-</span> <span style="color: #0000DD; font-weight: bold">1</span>))
        max <span style="color: #333333">=</span> <span style="color: #333333">*</span>(a <span style="color: #333333">+</span> m <span style="color: #333333">-</span> <span style="color: #0000DD; font-weight: bold">1</span>) <span style="color: #333333">+</span> <span style="color: #0000DD; font-weight: bold">1</span>;
    <span style="color: #008800; font-weight: bold">else</span>
        max <span style="color: #333333">=</span> <span style="color: #333333">*</span>(a <span style="color: #333333">+</span> m <span style="color: #333333">+</span> n <span style="color: #333333">-</span> <span style="color: #0000DD; font-weight: bold">1</span>) <span style="color: #333333">+</span> <span style="color: #0000DD; font-weight: bold">1</span>;

    <span style="color: #333399; font-weight: bold">int</span> cut <span style="color: #333333">=</span> m <span style="color: #333333">+</span> n;
    <span style="color: #888888">// sort to call all repeated at one place</span>
    sort(a, cut);
    <span style="color: #888888">// 	Print(a,m+n);</span>
    <span style="color: #888888">// 	printf(&quot;\n&quot;);</span>
    <span style="color: #888888">// put repeated, greater than max so that it goes out of park</span>
    <span style="color: #008800; font-weight: bold">for</span> (<span style="color: #333399; font-weight: bold">int</span> h <span style="color: #333333">=</span> <span style="color: #0000DD; font-weight: bold">0</span>, t <span style="color: #333333">=</span> <span style="color: #0000DD; font-weight: bold">1</span>; t <span style="color: #333333">&lt;</span> m <span style="color: #333333">+</span> n; t<span style="color: #333333">++</span>)
    {
        <span style="color: #008800; font-weight: bold">if</span> (<span style="color: #333333">*</span>(a <span style="color: #333333">+</span> t) <span style="color: #333333">==</span> <span style="color: #333333">*</span>(a <span style="color: #333333">+</span> t <span style="color: #333333">-</span> h <span style="color: #333333">-</span> <span style="color: #0000DD; font-weight: bold">1</span>))
        {
            <span style="color: #333333">*</span>(a <span style="color: #333333">+</span> t) <span style="color: #333333">=</span> max;
            h<span style="color: #333333">++</span>;
            cut<span style="color: #333333">--</span>;
        }
        <span style="color: #008800; font-weight: bold">else</span>
        {
            h <span style="color: #333333">=</span> <span style="color: #0000DD; font-weight: bold">0</span>;
        }
    }
    <span style="color: #888888">// 	Print(a,m+n);</span>
    <span style="color: #888888">// 	printf(&quot;%d\n&quot;,cut);</span>
    <span style="color: #888888">// sort again to remove repeated</span>
    sort(a, n <span style="color: #333333">+</span> m);
    <span style="color: #888888">// 	Print(a,cut);</span>
    <span style="color: #888888">// no of distinct numberr</span>
    <span style="color: #333333">*</span>merged_len <span style="color: #333333">=</span> cut;

    <span style="color: #008800; font-weight: bold">return</span> a;
}
<span style="color: #888888">// driver code</span>
<span style="color: #333399; font-weight: bold">int</span> main()
{

    <span style="color: #333399; font-weight: bold">int</span> m, n;
    scanf(<span style="background-color: #fff0f0">&quot;%d %d&quot;</span>, <span style="color: #333333">&amp;</span>m, <span style="color: #333333">&amp;</span>n);

    <span style="color: #333399; font-weight: bold">int</span> <span style="color: #333333">*</span>a <span style="color: #333333">=</span> (<span style="color: #333399; font-weight: bold">int</span> <span style="color: #333333">*</span>)malloc((m <span style="color: #333333">+</span> n) <span style="color: #333333">*</span> <span style="color: #008800; font-weight: bold">sizeof</span>(<span style="color: #333399; font-weight: bold">int</span>));
    <span style="color: #333399; font-weight: bold">int</span> <span style="color: #333333">*</span>b <span style="color: #333333">=</span> (<span style="color: #333399; font-weight: bold">int</span> <span style="color: #333333">*</span>)malloc(<span style="color: #0000DD; font-weight: bold">1</span> <span style="color: #333333">*</span> <span style="color: #008800; font-weight: bold">sizeof</span>(<span style="color: #333399; font-weight: bold">int</span>));
    <span style="color: #333399; font-weight: bold">int</span> c;
    <span style="color: #888888">// scan all</span>
    Scan(a, n <span style="color: #333333">+</span> m);
    <span style="color: #888888">// problem soln</span>
    <span style="color: #333399; font-weight: bold">int</span> <span style="color: #333333">*</span>out <span style="color: #333333">=</span> merge(a, b, m, n, <span style="color: #333333">&amp;</span>c);
    <span style="color: #888888">// print</span>
    printf(<span style="background-color: #fff0f0">&quot;%d</span><span style="color: #666666; font-weight: bold; background-color: #fff0f0">\n</span><span style="background-color: #fff0f0">&quot;</span>, c);
    Print(out, c);

    <span style="color: #008800; font-weight: bold">return</span> <span style="color: #0000DD; font-weight: bold">0</span>;
}
</pre></div>
