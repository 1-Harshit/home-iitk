<div id="problem" class="panel-body">
                <h1><span class="title">Faulty Keyboard</span><br><small class="category">Bonus3</small></h1>
                <hr>
                <div style="white-space: pre-wrap" class="statement"><b>[35 Points]</b>

----------------------------------------------------------------------
<b>Grading Scheme</b>:
<b>Note:</b> Give 0 marks for test-case component if there is any form of hard-coding. Eg: printf("0"); 

<table class="table table-bordered">
		<tbody><tr><th>Marks</th> <th>Component</th></tr>
        <tr><td colspan="2"><b>I/O and Good Practices</b></td></tr>
        <tr><td>+3</td> <td>Loop for taking stream of characters</td></tr>
		<tr><td>+3</td> <td>Correct terminating condition for the loop</td></tr>
        <tr><td>+2</td> <td>For indentation and comments (or meaningful variable names)</td></tr>
        <tr><td colspan="2"><b>Logic</b></td></tr>
        <tr><td>+8</td> <td> Printing unrepeated characters as required </td></tr>
		<tr><td>+3</td> <td>Calculating total number of characters to be printed</td></tr>
		<tr><td>+2</td> <td>Taking modulo of repeated characters and length</td></tr>
		<tr><td>+2</td> <td>Conditions for printing output</td></tr>
        <tr><td colspan="2"><b>Test case Component</b></td></tr>
		<tr><td>+2</td> <td>+1 for each visible test case</td></tr>
		<tr><td>+10</td> <td>+2 for each invisible test case</td></tr>
</tbody></table>
----------------------------------------------------------------------

<b>Note:</b> Usage of arrays is forbidden in this lab (only concepts until loops are allowed).

Govind's keyboard has started to behave in a strange way. It keeps on printing the same character as long as the next character is not pressed(he never presses the same character twice in succession). This problem stops when a '.'(dot) is pressed, and the sentence ends with the first dot pressed. He creates a check which only fails if the number of extra characters printed is divisible by the actual length of the sentence. You need to write a code which prints the actual string and says whether his check will work on the given faultily typed message or not.

<b>INPUT</b>:
A stream of characters which denotes the output provided by his keyboard.

<b>OUTPUT</b>:
The first line prints the actual sentence he would have typed,along with the dot.
In the second line, print <b>Check_Safe</b> if his check will work on the given input else print <b>Fail</b> 

<b>EXAMPLE</b>:
INPUT:
abbabaa.

OUTPUT: 
ababa.
Check_Safe

Explanation: All repeated letters are removed to get the initial string. The extra characters in the original string are 2 and the length of the actual string is 6. Since 2 is not divisible by 6 the check works.

INPUT
aaabbbbcccc.

OUTPUT:
abc.
Fail

Explanation: All repeated letters are removed to get the initial string. The extra characters in the original string are 8 and the length of the actual string is 4. Since 8 is divisible by 4 the check fails.

<b>Note:</b> Few marks will be reserved for good programming practices.</div>
                <h5>Start Solving!</h5>
            </div>