<!-- HTML generated using hilite.me --><div style="background: #ffffff; overflow:auto;width:auto;border:solid gray;border-width:.1em .1em .1em .8em;padding:.2em .6em;"><pre style="margin: 0; line-height: 125%"><span style="color: #557799">#include&lt;stdio.h&gt;</span>
<span style="color: #557799">#include&lt;stdlib.h&gt;</span>

<span style="color: #557799">#define max_len 110</span>

<span style="color: #333399; font-weight: bold">int</span> <span style="color: #0066BB; font-weight: bold">main</span>()
{
    <span style="color: #333399; font-weight: bold">char</span> a[max_len];
    
    scanf(<span style="background-color: #fff0f0">&quot;%s&quot;</span>, a);
    <span style="color: #333399; font-weight: bold">float</span> x<span style="color: #333333">=</span>atof(a);
    
    scanf(<span style="background-color: #fff0f0">&quot;%s&quot;</span>, a);
    <span style="color: #333399; font-weight: bold">float</span> y<span style="color: #333333">=</span>atof(a);
    
    printf(<span style="background-color: #fff0f0">&quot;%.2f&quot;</span>, x<span style="color: #333333">+</span>y);
    
    <span style="color: #008800; font-weight: bold">return</span> <span style="color: #0000DD; font-weight: bold">0</span>;
}
<span style="color: #333333">--------------------------</span>
<span style="color: #557799">#include&lt;stdio.h&gt;</span>

<span style="color: #333399; font-weight: bold">int</span> main()
{
    <span style="color: #333399; font-weight: bold">char</span> c[<span style="color: #0000DD; font-weight: bold">27</span>];
    scanf(<span style="background-color: #fff0f0">&quot;%s &quot;</span>, c);
    
    <span style="color: #333399; font-weight: bold">char</span> a<span style="color: #333333">=</span> getchar();
    <span style="color: #008800; font-weight: bold">while</span>(a<span style="color: #333333">!=</span>EOF){
        <span style="color: #008800; font-weight: bold">if</span>(a<span style="color: #333333">==</span><span style="color: #0044DD">&#39; &#39;</span>)
            printf(<span style="background-color: #fff0f0">&quot; &quot;</span>);
        <span style="color: #008800; font-weight: bold">else</span>
            <span style="color: #0066BB; font-weight: bold">printf</span>(<span style="background-color: #fff0f0">&quot;%c&quot;</span>, c[a<span style="color: #333333">-</span><span style="color: #0044DD">&#39;a&#39;</span>]);
        a<span style="color: #333333">=</span>getchar();
    }
    <span style="color: #008800; font-weight: bold">return</span> <span style="color: #0000DD; font-weight: bold">0</span>;
}
<span style="color: #333333">----------------------------------</span>
<span style="color: #557799">#include &lt;stdio.h&gt;</span>
<span style="color: #557799">#include &lt;math.h&gt;</span>

<span style="color: #008800; font-weight: bold">struct</span> point{
    <span style="color: #333399; font-weight: bold">int</span> x, y;
};

<span style="color: #008800; font-weight: bold">struct</span> pair{
    <span style="color: #008800; font-weight: bold">struct</span> point p1, p2;
    <span style="color: #333399; font-weight: bold">float</span> m, c;
};

<span style="color: #333399; font-weight: bold">int</span> <span style="color: #0066BB; font-weight: bold">main</span>()
{
    <span style="color: #333399; font-weight: bold">int</span> n;
    scanf(<span style="background-color: #fff0f0">&quot;%d&quot;</span>, <span style="color: #333333">&amp;</span>n);

    <span style="color: #008800; font-weight: bold">struct</span> pair a[n];

    <span style="color: #008800; font-weight: bold">for</span> (<span style="color: #333399; font-weight: bold">int</span> i <span style="color: #333333">=</span> <span style="color: #0000DD; font-weight: bold">0</span>; i <span style="color: #333333">&lt;</span> n; i<span style="color: #333333">++</span>){
        scanf(<span style="background-color: #fff0f0">&quot;%d %d %d %d&quot;</span>, <span style="color: #333333">&amp;</span>a[i].p1.x, <span style="color: #333333">&amp;</span>a[i].p1.y, <span style="color: #333333">&amp;</span>a[i].p2.x, <span style="color: #333333">&amp;</span>a[i].p2.y);
        <span style="color: #008800; font-weight: bold">if</span> (a[i].p2.x <span style="color: #333333">==</span> a[i].p1.x){
            a[i].m <span style="color: #333333">=</span> <span style="color: #6600EE; font-weight: bold">1e9</span>;
            a[i].c <span style="color: #333333">=</span> a[i].p1.x;
        }<span style="color: #008800; font-weight: bold">else</span>{
            a[i].m <span style="color: #333333">=</span> (<span style="color: #333399; font-weight: bold">float</span>)(a[i].p2.y <span style="color: #333333">-</span> a[i].p1.y) <span style="color: #333333">/</span> (<span style="color: #333399; font-weight: bold">float</span>)(a[i].p2.x <span style="color: #333333">-</span> a[i].p1.x);
            a[i].c <span style="color: #333333">=</span> (<span style="color: #333399; font-weight: bold">float</span>)(a[i].m <span style="color: #333333">*</span> a[i].p1.x <span style="color: #333333">-</span> a[i].p1.y);
        }
    }

    <span style="color: #333399; font-weight: bold">int</span> iden <span style="color: #333333">=</span> <span style="color: #0000DD; font-weight: bold">0</span>, para <span style="color: #333333">=</span> <span style="color: #0000DD; font-weight: bold">0</span>, inter <span style="color: #333333">=</span> <span style="color: #0000DD; font-weight: bold">0</span>;

    <span style="color: #008800; font-weight: bold">for</span> (<span style="color: #333399; font-weight: bold">int</span> i <span style="color: #333333">=</span> <span style="color: #0000DD; font-weight: bold">0</span>; i <span style="color: #333333">&lt;</span> n; i<span style="color: #333333">++</span>)
        <span style="color: #008800; font-weight: bold">for</span> (<span style="color: #333399; font-weight: bold">int</span> j <span style="color: #333333">=</span> i <span style="color: #333333">+</span> <span style="color: #0000DD; font-weight: bold">1</span>; j <span style="color: #333333">&lt;</span> n; j<span style="color: #333333">++</span>)
            <span style="color: #008800; font-weight: bold">if</span> (a[i].m <span style="color: #333333">==</span> a[j].m)
                <span style="color: #008800; font-weight: bold">if</span> (a[i].c <span style="color: #333333">==</span> a[j].c)
                    iden<span style="color: #333333">++</span>;
                <span style="color: #008800; font-weight: bold">else</span>
                    para<span style="color: #333333">++</span>;
            <span style="color: #008800; font-weight: bold">else</span>
                inter<span style="color: #333333">++</span>;

    printf(<span style="background-color: #fff0f0">&quot;PARALLEL: %d</span><span style="color: #666666; font-weight: bold; background-color: #fff0f0">\n</span><span style="background-color: #fff0f0">&quot;</span>, para);
    printf(<span style="background-color: #fff0f0">&quot;INTERSECT: %d</span><span style="color: #666666; font-weight: bold; background-color: #fff0f0">\n</span><span style="background-color: #fff0f0">&quot;</span>, inter);
    printf(<span style="background-color: #fff0f0">&quot;IDENTICAL: %d</span><span style="color: #666666; font-weight: bold; background-color: #fff0f0">\n</span><span style="background-color: #fff0f0">&quot;</span>, iden);

    <span style="color: #008800; font-weight: bold">return</span> <span style="color: #0000DD; font-weight: bold">0</span>;
}
<span style="color: #333333">------------------------------------</span>
<span style="color: #557799">#include&lt;stdio.h&gt;</span>

<span style="color: #008800; font-weight: bold">struct</span> students{
    <span style="color: #333399; font-weight: bold">int</span> roll;
    <span style="color: #333399; font-weight: bold">int</span> Marks;
    <span style="color: #333399; font-weight: bold">int</span> MTH;
    <span style="color: #333399; font-weight: bold">int</span> ESC;
    <span style="color: #333399; font-weight: bold">int</span> PHY;
};

<span style="color: #333399; font-weight: bold">int</span> <span style="color: #0066BB; font-weight: bold">compare</span>(<span style="color: #008800; font-weight: bold">struct</span> students a, <span style="color: #008800; font-weight: bold">struct</span> students b){
    <span style="color: #008800; font-weight: bold">if</span>(a.Marks<span style="color: #333333">!=</span>b.Marks)
        <span style="color: #008800; font-weight: bold">return</span> a.Marks<span style="color: #333333">&lt;</span>b.Marks;
    
    <span style="color: #008800; font-weight: bold">if</span>(a.MTH<span style="color: #333333">!=</span>b.MTH)
        <span style="color: #008800; font-weight: bold">return</span> a.MTH<span style="color: #333333">&lt;</span>b.MTH;
    
    <span style="color: #008800; font-weight: bold">if</span>(a.ESC<span style="color: #333333">!=</span>b.ESC)
        <span style="color: #008800; font-weight: bold">return</span> a.ESC<span style="color: #333333">&lt;</span>b.ESC;
    
    <span style="color: #008800; font-weight: bold">return</span> <span style="color: #0000DD; font-weight: bold">1</span>;
}

<span style="color: #333399; font-weight: bold">int</span> <span style="color: #0066BB; font-weight: bold">main</span>(){
    <span style="color: #333399; font-weight: bold">int</span> n;
    scanf(<span style="background-color: #fff0f0">&quot;%d&quot;</span>, <span style="color: #333333">&amp;</span>n);
    
    <span style="color: #008800; font-weight: bold">struct</span> students a[n];
    
    <span style="color: #008800; font-weight: bold">for</span>(<span style="color: #333399; font-weight: bold">int</span> i<span style="color: #333333">=</span><span style="color: #0000DD; font-weight: bold">0</span>; i<span style="color: #333333">&lt;</span>n; i<span style="color: #333333">++</span>){
        scanf(<span style="background-color: #fff0f0">&quot;%d %d %d %d</span><span style="color: #666666; font-weight: bold; background-color: #fff0f0">\n</span><span style="background-color: #fff0f0">&quot;</span>, <span style="color: #333333">&amp;</span>a[i].roll, <span style="color: #333333">&amp;</span>a[i].MTH, <span style="color: #333333">&amp;</span>a[i].ESC, <span style="color: #333333">&amp;</span>a[i].PHY);
        a[i].Marks <span style="color: #333333">=</span> a[i].MTH <span style="color: #333333">+</span> a[i].ESC <span style="color: #333333">+</span> a[i].PHY;
    }
    
    <span style="color: #008800; font-weight: bold">for</span>(<span style="color: #333399; font-weight: bold">int</span> i<span style="color: #333333">=</span><span style="color: #0000DD; font-weight: bold">0</span>; i<span style="color: #333333">&lt;</span>n;i<span style="color: #333333">++</span>)
        <span style="color: #008800; font-weight: bold">for</span>(<span style="color: #333399; font-weight: bold">int</span> j<span style="color: #333333">=</span>i<span style="color: #333333">+</span><span style="color: #0000DD; font-weight: bold">1</span>; j<span style="color: #333333">&lt;</span>n; j<span style="color: #333333">++</span>)
            <span style="color: #008800; font-weight: bold">if</span>(compare(a[i], a[j])){
                <span style="color: #008800; font-weight: bold">struct</span> students temp <span style="color: #333333">=</span>a[i];
                a[i]<span style="color: #333333">=</span>a[j];
                a[j]<span style="color: #333333">=</span>temp;
            }
    
    <span style="color: #008800; font-weight: bold">for</span>(<span style="color: #333399; font-weight: bold">int</span> i<span style="color: #333333">=</span><span style="color: #0000DD; font-weight: bold">0</span>;i<span style="color: #333333">&lt;</span>n;<span style="color: #333333">++</span>i)
        printf(<span style="background-color: #fff0f0">&quot;%d,%d</span><span style="color: #666666; font-weight: bold; background-color: #fff0f0">\n</span><span style="background-color: #fff0f0">&quot;</span>, i<span style="color: #333333">+</span><span style="color: #0000DD; font-weight: bold">1</span>,a[i].roll);
    
    <span style="color: #008800; font-weight: bold">return</span> <span style="color: #0000DD; font-weight: bold">0</span>;
}
<span style="color: #333333">----------------------------------</span>
<span style="color: #557799">#include&lt;stdio.h&gt;</span>

<span style="color: #008800; font-weight: bold">struct</span> rect{
    <span style="color: #333399; font-weight: bold">int</span> x1,y1,x2,y2;
};

<span style="color: #333399; font-weight: bold">int</span> <span style="color: #0066BB; font-weight: bold">test</span>(<span style="color: #008800; font-weight: bold">struct</span> rect a, <span style="color: #008800; font-weight: bold">struct</span> rect b){
    <span style="color: #008800; font-weight: bold">if</span>(b.x2 <span style="color: #333333">&lt;</span> a.x1)
        <span style="color: #008800; font-weight: bold">return</span> <span style="color: #0000DD; font-weight: bold">0</span>;
    <span style="color: #008800; font-weight: bold">if</span>(a.x2 <span style="color: #333333">&lt;</span> b.x1)
        <span style="color: #008800; font-weight: bold">return</span> <span style="color: #0000DD; font-weight: bold">0</span>;
    <span style="color: #008800; font-weight: bold">if</span>(b.y2 <span style="color: #333333">&gt;</span> a.y1)
        <span style="color: #008800; font-weight: bold">return</span> <span style="color: #0000DD; font-weight: bold">0</span>;
    <span style="color: #008800; font-weight: bold">if</span>(a.y2 <span style="color: #333333">&gt;</span> b.y1)
        <span style="color: #008800; font-weight: bold">return</span> <span style="color: #0000DD; font-weight: bold">0</span>;
    <span style="color: #008800; font-weight: bold">return</span> <span style="color: #0000DD; font-weight: bold">1</span>;
}

<span style="color: #333399; font-weight: bold">int</span> <span style="color: #0066BB; font-weight: bold">main</span>()
{
    <span style="color: #333399; font-weight: bold">int</span> n;
    scanf(<span style="background-color: #fff0f0">&quot;%d&quot;</span>, <span style="color: #333333">&amp;</span>n);
    
    <span style="color: #008800; font-weight: bold">struct</span> rect a[n];
    
    <span style="color: #008800; font-weight: bold">for</span>(<span style="color: #333399; font-weight: bold">int</span> i<span style="color: #333333">=</span><span style="color: #0000DD; font-weight: bold">0</span>; i<span style="color: #333333">&lt;</span>n; i<span style="color: #333333">++</span>)
        scanf(<span style="background-color: #fff0f0">&quot;%d %d %d %d&quot;</span>, <span style="color: #333333">&amp;</span>a[i].x1, <span style="color: #333333">&amp;</span>a[i].y1, <span style="color: #333333">&amp;</span>a[i].x2, <span style="color: #333333">&amp;</span>a[i].y2);
    
    <span style="color: #008800; font-weight: bold">for</span>(<span style="color: #333399; font-weight: bold">int</span> i<span style="color: #333333">=</span><span style="color: #0000DD; font-weight: bold">0</span>; i<span style="color: #333333">&lt;</span>n; i<span style="color: #333333">++</span>)
        <span style="color: #008800; font-weight: bold">for</span>(<span style="color: #333399; font-weight: bold">int</span> j<span style="color: #333333">=</span>i<span style="color: #333333">+</span><span style="color: #0000DD; font-weight: bold">1</span>; j<span style="color: #333333">&lt;</span>n; j<span style="color: #333333">++</span>)
            <span style="color: #008800; font-weight: bold">if</span>(test(a[i], a[j]))
                printf(<span style="background-color: #fff0f0">&quot;%c,%c</span><span style="color: #666666; font-weight: bold; background-color: #fff0f0">\n</span><span style="background-color: #fff0f0">&quot;</span>, <span style="color: #0000DD; font-weight: bold">97</span><span style="color: #333333">+</span>i, <span style="color: #0000DD; font-weight: bold">97</span><span style="color: #333333">+</span>j);
    
    <span style="color: #008800; font-weight: bold">return</span> <span style="color: #0000DD; font-weight: bold">0</span>;
}
</pre></div>
