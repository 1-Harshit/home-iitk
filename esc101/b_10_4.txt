<div id="problem" class="panel-body">
                <h1><span class="title">Link a List</span><br><small class="category">Bonus10</small></h1>
                <hr>
                <div style="white-space: pre-wrap" class="statement"><b>Link a List [20 marks]</b>

----------------------------------------------------------------------

<b>Problem Statement</b>
The first line of the input will give you n, a strictly positive integer. The next line will give you n integers, separated by a space. These are the occupants of a linked list we are going to construct. However, the linked list does not contain these elements in this order. Store these n integers in an array arr.

After this, in the next line, we will give you the index of the head of the linked list in the array arr. After this, there will be n-1 more lines which will contain pairs of numbers of the form a b (i.e. the two numbers will be separated by a space). This will indicate that the element at index a in the array arr points to the element at index b in the array arr.

Create a linked list with n nodes with the elements in the given order. Please refer to the hints to see an easy way to do so. In your output, in the first line, print the linked list by printing elements from the head to tail, two elements separated by a single space. There should be no spaces at the end of the line. Then reverse the linked list i.e. all links are reversed and the old tail becomes the new head and the old head becomes the new tail. Print the reverse linked list on the second line of the output.

<b>Caution</b>
<ol>
<li>n may be any strictly positive integer, even 1 in which the linked list will have a single element.
</li><li>There are two lines of output. There should be no extra spaces at the end of any of the lines.
</li></ol>
<b>HINTS</b>: Following these steps might make your life easier:
<ol>
<li>Create a structure node to store an integer and a pointer.
</li><li>Make an array of n nodes to store the n integers as given as well as the pointers to the next element.
</li><li>Store the location of the head node
</li><li>For each pair (a b) given as input, make the node at index a in the array point to the node at index b in the array
</li><li>Write a function to print a linked list.
</li><li>Write a function to reverse the linked list.
</li></ol>
Note that we are asking you to use a static data structure like an array, to store a linked list, only to make this problem less complicated. What you have created is not a very efficient dynamic data structure.

----------------------------------------------------------------------

<b>EXAMPLE</b>:
INPUT
5
1 2 3 4 5
2
1 0
3 4
0 3
2 1

OUTPUT:
3 2 1 4 5
5 4 1 2 3

<b>Explanation</b>: The head is index 2 in the array i.e. the element 3. The links in the linked list are shown below
2 =&gt; 1
4 =&gt; 5
1 =&gt; 4
3 =&gt; 2

Thus, the linked list is 3 =&gt; 2 =&gt; 1 =&gt; 4 =&gt; 5 with 5 as the tail. The reversed list is
5 =&gt; 4 =&gt; 1 =&gt; 2 =&gt; 3 with 5 as the head and 3 as the tail.

----------------------------------------------------------------------

<b>Grading Scheme</b>:
Total marks: <b>[20 Points]</b>

There will be partial grading in this question. There are two lines in your output. Printing each line correctly, in the correct order, carries 50% weightage. Each visible test case is worth 2 points and each hidden test case is worth 4 points. There are 2 visible and 4 hidden test cases.

Please remember, however, that when you press Submit/Evaluate, you will get a green bar only if all parts of your answer are correct. Thus, if your answer is only partly correct, Prutor will say that you have not passed that test case completely, but when we do autograding afterwards, you will get partial marks.</div>
                <h5>Start Solving!</h5>
            </div>