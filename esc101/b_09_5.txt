<div id="problem" class="panel-body">
                <h1><span class="title">FileIO- This is easy too</span><br><small class="category">Bonus9</small></h1>
                <hr>
                <div style="white-space: pre-wrap" class="statement">Your second task of the day is to create an encryption mechanism. Today's mechanism is called a substitution cipher. You will have to read all the contents of a file, use the cipher, and write the encrypted text to another file. 

The substitution cipher works by substituting each letter of the alphabet with another. It is specified by a string that contains all 26 letters of the alphabet, in some order. The order specifies the substitution you have to make, that is, you need to substitute the ith letter with the letter present at the ith position in the string. Please look at the sample input and test cases for an idea of what this looks like. 

<b>Note: </b> This program will be evaluated on both Prutor, as well as by your TA. As soon as your program passes all the test cases on Prutor, please ask a nearby TA to evaluate your code. Your code must be written in such a way that with no change or a small change to the code, it works both on Prutor as well as offline. If you wish to test your program yourself, please download the test cases that are available in the URL below. 

<b>Note to TA:</b> Please assist the student in downloading this code, and compiling it. You will have to verify them on test cases that can be found at this URL : https://cse.iitk.ac.in/users/govindg/esc101/1_2 Note that there are a set of 5 test cases. The input file must be specified in the command line. Compare the output from the program with the output within the above URL, using diff (or a similar utility). For Online Semester: Students have to create files on their own, check outputs by themselves for the evaluation part.

For each test case, please compile using gcc, and execute using "./a.out inX.txt", where X is the number denoting the test cases. You can then compare the output by doing "diff output.text outX.txt" where X is the corresponding test case. 


<b>INPUT</b>:
The input consists of two lines. 
The first line consists of the substitutions. This will be a string containing all 26 characters of the English alphabet (in lower case). They will be in random order (this specifies the cipher).
The second line consists of the string you have to encrypt. It will consist of an arbitrary number of english lowercase characters. The maximum size will be 100 characters for prutor. For the offline testing, your program must read till the end of the file and successfully convert all of them. 


<b>OUTPUT</b>:

For prutor, output one line which consists of the encrypted string. 
For offline testing, write to a new file called "output.txt". This new file must contain whatever whitespace characters the original input file had.


<b>EXAMPLE</b>:
INPUT: 

cabefdghijklmnopqrstuvwxyz
aaaaaaaaabbbbbcccccc

OUTPUT: 

cccccccccaaaaabbbbbb	

Explanation:

The cipher specifies the substitutions c for a, a for b, and b for c. 

<b>Note:</b> Few marks will be reserved for good programming practices.</div>
                <h5>Start Solving!</h5>
            </div>